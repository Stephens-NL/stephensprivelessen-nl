# Cursor Conventions and Best Practices

## Test Organization
1. Place tests in the correct directory structure:
   - Unit tests: `__tests__/` directory
   - E2E tests: `tests/` directory
   - Component tests: `__tests__/components/` directory
   - Page tests: `__tests__/pages/` directory

2. Test File Naming:
   - Use `.test.ts` or `.test.tsx` extension
   - Match the name of the file being tested (e.g., `ComponentName.test.tsx` for `ComponentName.tsx`)

## Dynamic Routes Testing
1. Avoid testing dynamic route files directly (e.g., `[location]/page.tsx`)
2. Instead, test the functionality through:
   - Integration tests
   - E2E tests
   - Unit tests of the underlying logic

## Navigation and Routing
1. All routes must be:
   - Lowercase (except root '/')
   - No trailing slashes (except root '/')
   - No spaces or special characters (only hyphens allowed)
   - Included in both navigation and sitemap

2. Required routes in navigation:
   ```typescript
   const expectedValidRoutes = [
     '/',
     '/privelessen',
     '/scriptiebegeleiding',
     '/services',
     '/workshops',
     '/consultancy',
     '/about',
     '/blog',
     '/faq',
     '/contact',
     '/mbo-rekenen'
   ];
   ```

## Sitemap Conventions
1. URL Patterns:
   ```typescript
   const urlPattern = /^(\/|\/[a-z-]+|\/workshops\/[a-z-]+|\/privelessen\/[a-z-]+(\/[a-z-]+)?|\/scriptiebegeleiding\/[a-z-]+|\/mbo-rekenen|\/blog\/\d+)$/;
   ```

2. Sitemap Requirements:
   - All navigation routes must be included
   - All blog posts must be included
   - All workshop pages must be included
   - Valid priorities and change frequencies must be set

## Component Testing
1. Import/Export Conventions:
   - Use default exports for components
   - Use named imports for hooks and utilities
   - Example:
     ```typescript
     // Component file
     export default function Component() { ... }
     
     // Test file
     import Component from './Component';
     ```

2. Mock Conventions:
   - Place mocks in `__mocks__/` directory
   - Use `jest.mock()` for module mocks
   - Mock external dependencies, not internal components

## Type Safety
1. Avoid using `any` type
2. Use proper type assertions when necessary
3. Define interfaces for test data
4. Example:
   ```typescript
   interface TestData {
     id: string;
     name: string;
     // ... other properties
   }
   ```

## Error Prevention
1. Always run tests before committing:
   ```bash
   npm test
   ```

2. Check for common issues:
   - Missing routes in navigation
   - Incorrect URL patterns in sitemap
   - Type mismatches in imports/exports
   - Dynamic route testing issues

3. When adding new routes:
   - Add to navigation array
   - Update sitemap generation
   - Update URL pattern tests
   - Add to expected valid routes

## Best Practices
1. Keep tests focused and isolated
2. Use descriptive test names
3. Follow the Arrange-Act-Assert pattern
4. Mock external dependencies
5. Test both success and error cases
6. Keep test files close to the code they test

## Common Issues to Watch For
1. Module resolution errors:
   - Check import paths
   - Verify file extensions
   - Ensure proper module exports

2. Type errors:
   - Use proper TypeScript types
   - Avoid `any` type
   - Define interfaces for test data

3. Route validation:
   - All routes must be lowercase
   - No trailing slashes
   - Valid URL patterns
   - Included in navigation and sitemap

4. Test organization:
   - Correct directory structure
   - Proper file naming
   - Appropriate test types (unit, integration, e2e)

# SEO Strategy & Objectives for Quant-skills voor niet-bèta‐studenten

## 🎯 Core Focus
"Quant-skills voor niet-bèta‐studenten"

### Target Audience
- UvA & VU students in:
  - Business
  - Psychology
  - Life Sciences
  - Economics
  - Communication
- Key characteristics:
  - Struggle with statistics, calculus, or data programming
  - Experience "math anxiety"
  - Need quick, practical results

## 📊 Market Analysis

### Competition Overview
1. **Marktplaats Profiles**
   - Example: Superprof (statistics, econometrics, calculus)
   - Weakness: Thin content, no brand, limited campus focus

2. **Specialist Agencies**
   - Example: Sigma Plus Statistics (€60/h)
   - Weakness: Statistics only, expensive, no programming

3. **UvA Help Pages**
   - Example: "Help with methods & statistics"
   - Weakness: No 1-on-1 tutoring, no external tutor links

### Market Gap
Unique combination of statistics + calculus + Python/R specifically for non-beta studies with personal tutoring in Amsterdam.

## 🔍 Keyword Strategy

### Key Clusters
1. **Statistics for Psychology**
   - "bijles statistiek SPSS psychologie Amsterdam"
   - "statistische analyse psych scriptie hulp"

2. **Econometrics & Business Math**
   - "wiskunde voor bedrijfskunde Amsterdam bijles"
   - "econometrie tentamen VU bijles"

3. **Calculus for Life Sciences**
   - "calculus biologie studenten Amsterdam"
   - "differential equations biomedisch bijles"

4. **Programming for Data Courses**
   - "Python data-analyse cursus voor COM‐students Amsterdam"
   - "R Studio bijles UvA"

5. **Exam & Thesis Support**
   - "statistiek scriptie spoed hulp Amsterdam"
   - "herkansing calculus UvA bijles"

## 🏗️ Site Architecture (Next.js)

```
/
├── app/
│   ├── (marketing)/
│   │   ├── page.tsx                    // Homepage
│   │   ├── about/
│   │   │   └── page.tsx
│   │   ├── blog/
│   │   │   ├── page.tsx
│   │   │   └── [slug]/
│   │   │       └── page.tsx
│   │   ├── contact/
│   │   │   └── page.tsx
│   │   ├── faq/
│   │   │   └── page.tsx
│   │   ├── mbo-rekenen/
│   │   │   └── page.tsx
│   │   ├── privelessen/
│   │   │   ├── page.tsx
│   │   │   └── [location]/
│   │   │       └── page.tsx
│   │   ├── scriptiebegeleiding/
│   │   │   ├── page.tsx
│   │   │   └── [subject]/
│   │   │       └── page.tsx
│   │   ├── services/
│   │   │   └── page.tsx
│   │   └── workshops/
│   │       ├── page.tsx
│   │       └── [workshop]/
│   │           └── page.tsx
│   └── (dashboard)/
│       └── dashboard/
│           └── page.tsx
├── components/
│   ├── ui/
│   ├── marketing/
│   └── dashboard/
├── lib/
│   ├── utils.ts
│   └── constants.ts
└── public/
    └── images/

# New SEO-Focused Routes to Add
/bijles/
├── amsterdam/                          // Generic hub for tutoring
├── onderwerp/
│   ├── statistiek/
│   │   ├── psychologie/
│   │   │   └── page.tsx               // Statistics for Psychology
│   │   └── economie/
│   │       └── page.tsx               // Statistics for Economics
│   ├── calculus/
│   │   └── life-sciences/
│   │       └── page.tsx               // Calculus for Life Sciences
│   └── programmeren/
│       └── python-data/
│           └── page.tsx               // Python for Data Analysis
└── campus/
    ├── uva/
    │   └── page.tsx                   // UvA-specific landing
    └── vu/
        └── page.tsx                   // VU-specific landing
```

### Page Features & Implementation Notes

#### Existing Structure
- Marketing pages with clear CTAs
- Blog with dynamic routing
- Location-based tutoring pages
- Workshop and service pages
- Dashboard for authenticated users

#### New SEO-Focused Pages
1. **Campus Pages** (`/bijles/campus/[university]`)
   - Route descriptions to campus locations
   - Student discounts and special offers
   - Embedded testimonials from university students
   - Dynamic OG-images with campus-specific backgrounds

2. **Subject Pages** (`/bijles/onderwerp/[subject]/[specialization]`)
   - Pain points and success stories
   - Subject-specific formulas with LaTeX rendering
   - Structured data for educational content
   - Quick-win elements for urgent needs

3. **Generic Hub** (`/bijles/amsterdam`)
   - Overview of all services
   - Location-based CTAs
   - Integration with existing `/privelessen` structure

### Technical Implementation
- Use Next.js App Router for all new routes
- Implement ISR for dynamic content
- Add structured data for each page type
- Integrate with existing components and layouts
- Maintain consistent navigation structure

## 📝 Content Strategy

### Tone of Voice
- Reassuring
- Jargon-free
- Humorous ("ik praat liever in pizza dan in pi")

### Quick-Win Elements
- "Tentamen over 10 dagen? Boek spoedtraject."
- "Scriptie vast op statistiek? 48-uurs hulplijn."

### Technical Elements
- LaTeX rendering for formulas
- Structured data implementation

## 🔗 Link Building Strategy

### Campus-Focused Assets
1. **Mini-workshop "SPSS Crash Course in 60 min."**
   - Target: VSPA (psychology student association)
   - Strategy: Free lunch session → website link + Instagram tag

2. **Cheat-sheet PDF "ANOVA in R in 2 stappen"**
   - Target: Economics & Business
   - Strategy: Canvas course forums upload

3. **Blog "5 calculus-hacks voor BioMed"**
   - Target: Life-Sci study advisors
   - Strategy: Monthly newsletter mention

4. **GitHub repo "Stats101-Python notebooks"**
   - Target: Data team / Honours Programme
   - Strategy: Strong .edu backlinks

## 💡 Conversion Optimization

### UI Elements
- Floating 'Chat with tutor' (WhatsApp API button visible 19:00-23:00)
- Campus review slider (photo + quote + rating)
- Pricing anchor ("€40/h with 5h bundle" vs "Sigma Plus €60/h")

## 🛠️ Technical Implementation

### Vercel Features
- Edge Middleware for campaign tracking
- ISG for blog posts (revalidate 86400s)
- Next.js route handlers for keyword logging

## 📈 KPIs & Monitoring

| KPI | Target | Tool & Frequency |
|-----|--------|------------------|
| Campus pages CTR | ≥ 6% | GSC weekly export |
| Conversion rate | 4% | GA4 Events |
| Organic top-3 keywords | 20 in 6 months | Open-SERP API |
| .edu/.sv backlinks | +12 in 12 months | Ahrefs alerts |

## 📋 Action Items

### Priority Tasks
1. [ ] Campus landing component with dynamic OG-image
2. [ ] Python script for GSC query data scraping
3. [ ] Email template for student association outreach
4. [ ] ISG implementation for blog posts

## 🔄 Updates & Revisions

### Latest Updates
- Initial strategy document created
- Core focus and target audience defined
- Site architecture mapped
- KPI framework established

### Next Review
- [ ] Review keyword performance
- [ ] Assess conversion rates
- [ ] Evaluate backlink growth
- [ ] Update content strategy based on analytics

---
*Last updated: 2024-03-19*
*Next review: 2024-04-19* 